name: Frontend CI workflow
on:
  push:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yaml'
    branches:
      - main
  pull_request:
    paths:
      - 'frontend/**'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: 18.x
          cache-dependency-path: ./frontend/package-lock.json
      - run: npm ci
      - run: npm run build

      - run: zip -qq -r build.zip dist

      # Share artifact inside workflow
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v3
        with:
          path: ./frontend/build.zip
          name: build.zip

  deploy-container:
    if: github.ref == 'refs/heads/main'
    #    needs:
    #      - build
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - run: echo $DOCKER_LOGIN_KEY | docker login --username ru-moscow-1@$DOCKER_LOGIN_USER --password-stdin $DOCKER_IMAGE_REPO_ADDR
        env:
          DOCKER_LOGIN_USER: ${{secrets.SBC_ACCESS_KEY}}
          DOCKER_LOGIN_KEY: ${{secrets.DOCKER_LOGIN_KEY}}
          DOCKER_IMAGE_REPO_ADDR: swr.ru-moscow-1.hc.sbercloud.ru
          DOCKER_REGISTRY: geekbrains-lecturer
      - run: |
          echo "Packaging docker image ..."
          tag="$DOCKER_IMAGE_REPO_ADDR/$DOCKER_REGISTRY/banzai-frontend:${{github.sha}}"
          latest_tag="$DOCKER_IMAGE_REPO_ADDR/$DOCKER_REGISTRY/banzai-frontend:latest"
          docker build . -t $tag -t $latest_tag
          docker push $tag
          docker push $latest_tag
        env:
          DOCKER_IMAGE_REPO_ADDR: swr.ru-moscow-1.hc.sbercloud.ru
          DOCKER_REGISTRY: geekbrains-lecturer
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    # When application is successfully tested and build has been generated
    # Then we can start with deployment
    needs: build
    steps:
      # Download previously shared build
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: build.zip
      - uses: montudor/action-zip@v1
        with:
          args: unzip -qq build.zip -d build
      # Set the credentials from repository settings/secrets
#      - uses: jakejarvis/s3-sync-action@master
#        with:
#          args: --delete
#        env:
#          AWS_S3_ENDPOINT: https://storage.yandexcloud.net/
#          AWS_S3_BUCKET: banzai-predict.site
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          SOURCE_DIR: 'build/build'      # optional: defaults to entire repository

